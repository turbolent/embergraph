<project name="dsi-utils" default="all" basedir=".">

  <property file="build.properties"/>

  <path id="build.classpath">
    <fileset dir="${build.lib.dir}">
      <include name="**/*.jar"/>
    </fileset>
    <fileset dir="${build.lib.unimi.dir}">
      <include name="**/*.jar"/>
    </fileset>
  </path>

  <path id="test.classpath">
    <pathelement location="${build.dir}/classes"/>
    <pathelement location="${build.dir}/test"/>
    <fileset dir="${build.lib.unimi.dir}">
      <include name="**/*.jar"/>
    </fileset>
    <fileset dir="${build.lib.junit.dir}">
      <include name="junit*.jar"/>
    </fileset>
  </path>

  <path id="runtime.classpath">
    <pathelement location="${build.dir}/classes"/>
    <path refid="build.classpath"/>
  </path>

  <target name="clean" description="cleans everything in [build.dir], but not the releases.">
    <delete dir="${build.dir}"/>
  </target>

  <target name="prepare">
    <!-- setup ${version} for regular or snapshot. -->
    <tstamp>
      <format property="today" pattern="ddMMyy" locale="en,US"/>
    </tstamp>
    <condition property="version" value="dsi-utils-${build.ver}-${today}"
      else="dsi-utils-${build.ver}">
      <istrue value="${snapshot}"/>
    </condition>
    <!--<echo message="today=${today}"/>-->
    <echo message="version=${version}"/>
    <!-- create directories. -->
    <mkdir dir="${build.dir}"/>
    <mkdir dir="${build.dir}/classes"/>
    <mkdir dir="${build.dir}/docs"/>
    <mkdir dir="${build.dir}/lib"/>
    <mkdir dir="${build.dir}/test"/>
    <mkdir dir="${build.dir}/test-results"/>
  </target>

  <target name="unpack" depends="prepare">
    <unzip src="${build.lib.dir}/dsiutils-1.0.10.jar"
      dest="${build.dir}/classes"/>
  </target>

  <target name="compile" depends="prepare, unpack">
    <mkdir dir="${build.dir}"/>
    <javac destdir="${build.dir}/classes" classpathref="build.classpath"
      debug="${javac.debug}" debuglevel="${javac.debuglevel}" verbose="${javac.verbose}"
      encoding="${javac.encoding}"
    >
      <!-- note: must also specify -bootclasspath and -extdirs when cross-compiling -->
      <!-- target="${javac.target}" source="${javac.source}" -->
      <src path="${dsi-utils.dir}/src/java"/>
      <!-- Do not include the unit tests @todo conditionally include?
            <src path="${dsi-utils.dir}/src/test"/>
            -->
    </javac>
    <!-- copy resources. -->
    <copy toDir="${build.dir}/classes">
      <fileset dir="${dsi-utils.dir}/src/java">
        <exclude name="**/*.java"/>
        <exclude name="**/package.html"/>
      </fileset>
    </copy>
  </target>

  <target name="jar" depends="compile" description="Generates the jar.">
    <jar destfile="${build.dir}/${version}.jar">
      <fileset dir="${build.dir}/classes"/>
      <manifest>
      </manifest>
    </jar>
  </target>

  <target name="test" depends="compile">
    <javac destdir="${build.dir}/test"
      debug="${javac.debug}" debuglevel="${javac.debuglevel}" verbose="${javac.verbose}"
      encoding="${javac.encoding}"
    >
      <classpath refid="test.classpath"/>
      <src path="${dsi-utils.dir}/src/test"/>
    </javac>
    <!-- copy resources. -->
    <copy toDir="${build.dir}/test">
      <fileset dir="${dsi-utils.dir}/src/test">
        <exclude name="**/*.java"/>
      </fileset>
    </copy>
    <junit printsummary="on" haltonfailure="yes" fork="no" dir="${classes.dir}" timeout="60000">
      <classpath refid="test.classpath"/>
      <formatter type="xml"/>
      <!-- Individual test suite to run when -DtestName is set -->
      <!-- to the fully-qualified name of the test suite       -->
      <!-- ant -DtestName=org.embergraph.cache.TestAll junit      -->
      <test name="${testName}" todir="${test.results.dir}" if="testName"/>
      <!-- Test suites to run when -DtestName is not set -->
      <test name="it.unimi.dsi.TestAll" todir="${test.results.dir}" unless="testName"/>
    </junit>
    <!-- Generate an HTML report. -->
    <junitreport todir="${build.dir}">
      <fileset dir="${test.results.dir}">
        <include name="TEST-*.xml"/>
      </fileset>
      <report format="frames" todir="${test.results.dir}/report"/>
    </junitreport>
  </target>

  <target name="javadoc" depends="prepare" if="javadoc">
    <mkdir dir="${build.dir}/docs/api"/>
    <!-- overview="....overview.html"  -->
    <javadoc destdir="${build.dir}/docs/api" defaultexcludes="yes"
      author="true" version="true" use="true"
      windowtitle="dsi-utils"
      classpathref="build.classpath">
      <arg value="-J-Xmx1000m"/>
      <packageset dir="${dsi-utils.dir}/src/java"/>
      <doctitle>
        <![CDATA[<h1>dsi-utils</h1>]]></doctitle>
      <bottom>
        <![CDATA[
<i>
Portions copyright &#169; 2006-2009 SYSTAP, LLC. All Rights Reserved.<br>
Portions copyright &#169; 2005-2009 Sebastiano Vigna
</i>]]></bottom>
      <tag name="todo" scope="all" description="TODO:"/>
      <tag name="issue" scope="all" description="ISSUE:"/>
      <!--tag name="FIXME" scope="all" description="FIXME:"/-->
      <link href="http://java.sun.com/j2se/1.5.0/docs/api/"/>
      <link href="http://openrdf.org/doc/sesame/api/"/>
    </javadoc>
  </target>

  <target name="all" depends="clean, test, jar, javadoc" description="clean, jar, javadoc."/>

</project>
