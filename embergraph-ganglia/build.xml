<project name="embergraph-ganglia" default="all" basedir=".">

  <property file="build.properties"/>

  <path id="build.classpath">
    <fileset dir="${build.lib.dir}">
      <include name="**/*.jar"/>
    </fileset>
  </path>

  <path id="test.classpath">
    <pathelement location="${build.dir}/classes"/>
    <pathelement location="${build.dir}/test"/>
    <fileset dir="${build.lib.dir}">
      <include name="junit*.jar"/>
      <include name="log4j*.jar"/>
    </fileset>
  </path>

  <path id="runtime.classpath">
    <pathelement location="${build.dir}/classes"/>
    <path refid="build.classpath"/>
  </path>

  <target name="clean" description="cleans everything in [build.dir], but not the releases.">
    <delete dir="${build.dir}"/>
  </target>

  <target name="prepare">
    <!-- setup ${version} for regular or snapshot. -->
    <tstamp>
      <format property="today" pattern="ddMMyy" locale="en,US"/>
    </tstamp>
    <condition property="version"
      value="embergraph-ganglia-${build.ver}-${today}"
      else="embergraph-ganglia-${build.ver}">
      <istrue value="${snapshot}"/>
    </condition>
    <!--<echo message="today=${today}"/>-->
    <echo message="version=${version}"/>
    <!-- create directories. -->
    <mkdir dir="${build.dir}"/>
    <mkdir dir="${build.dir}/classes"/>
    <mkdir dir="${build.dir}/docs"/>
    <mkdir dir="${build.dir}/lib"/>
    <mkdir dir="${build.dir}/test"/>
    <mkdir dir="${build.dir}/test-results"/>
  </target>

  <target name="compile" depends="prepare">
    <mkdir dir="${build.dir}"/>
    <javac destdir="${build.dir}/classes" classpathref="build.classpath" debug="${javac.debug}"
      debuglevel="${javac.debuglevel}" verbose="${javac.verbose}" encoding="${javac.encoding}">
      <!-- note: must also specify -bootclasspath and -extdirs when cross-compiling -->
      <!-- target="${javac.target}" source="${javac.source}" -->
      <src path="${embergraph-ganglia.dir}/src/main/java"/>
      <!-- Do not include the unit tests @todo conditionally include?
            <src path="${embergraph-ganglia.dir}/src/test/java"/>
            -->
    </javac>
    <!-- copy resources. -->
    <copy toDir="${build.dir}/classes">
      <fileset dir="${embergraph-ganglia.dir}/src/main/java">
        <exclude name="**/*.java"/>
        <exclude name="**/package.html"/>
      </fileset>
    </copy>
  </target>

  <target name="jar" depends="compile" description="Generates the jar.">
    <jar destfile="${build.dir}/${version}.jar">
      <fileset dir="${build.dir}/classes"/>
      <manifest>
      </manifest>
    </jar>
  </target>

  <target name="test" depends="compile">
    <javac destdir="${build.dir}/test" debug="${javac.debug}" debuglevel="${javac.debuglevel}"
      verbose="${javac.verbose}" encoding="${javac.encoding}">
      <classpath refid="test.classpath"/>
      <src path="${embergraph-ganglia.dir}/src/test/java"/>
    </javac>
    <!-- copy resources. -->
    <copy toDir="${build.dir}/test">
      <fileset dir="${embergraph-ganglia.dir}/src/test/java">
        <exclude name="**/*.java"/>
      </fileset>
    </copy>
    <junit printsummary="on" haltonfailure="yes" fork="no" dir="${classes.dir}" timeout="60000">
      <classpath refid="test.classpath"/>
      <formatter type="xml"/>
      <!-- Individual test suite to run when -DtestName is set -->
      <!-- to the fully-qualified name of the test suite       -->
      <!-- ant -DtestName=org.embergraph.cache.TestAll junit      -->
      <test name="${testName}" todir="${test.results.dir}" if="testName"/>
      <!-- Test suites to run when -DtestName is not set -->
      <test name="org.embergraph.ganglia.TestAll" todir="${test.results.dir}" unless="testName"/>
    </junit>
    <!-- Generate an HTML report. -->
    <junitreport todir="${build.dir}">
      <fileset dir="${test.results.dir}">
        <include name="TEST-*.xml"/>
      </fileset>
      <report format="frames" todir="${test.results.dir}/report"/>
    </junitreport>
  </target>

  <target name="javadoc" depends="prepare" if="javadoc">
    <mkdir dir="${build.dir}/docs/api"/>
    <!-- overview="....overview.html"  -->
    <javadoc destdir="${build.dir}/docs/api" defaultexcludes="yes" author="true" version="true"
      use="true" windowtitle="embergraph-ganglia" classpathref="build.classpath">
      <arg value="-J-Xmx1000m"/>
      <packageset dir="${embergraph-ganglia.dir}/src/main/java"/>
      <doctitle>
        <![CDATA[<h1>embergraph-ganglia</h1>]]></doctitle>
      <bottom>
        <![CDATA[
<i>

			   Copyright (C) SYSTAP, LLC 2006-2012.  All rights reserved.<p>

			   Licensed under the Apache License, Version 2.0 (the "License");
			   you may not use this file except in compliance with the License.
			   You may obtain a copy of the License at<p>

			       http://www.apache.org/licenses/LICENSE-2.0<p>

			   Unless required by applicable law or agreed to in writing, software
			   distributed under the License is distributed on an 'AS IS' BASIS,
			   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
			   See the License for the specific language governing permissions and
			   limitations under the License.<p>

							<hr>
			This product includes software developed by The Apache Software Foundation (http://www.apache.org/).
			License: http://www.apache.org/licenses/LICENSE-2.0
</i>]]></bottom>
      <!--tag name="FIXME" scope="all" description="FIXME:"/-->
      <link href="http://java.sun.com/j2se/1.5.0/docs/api/"/>
    </javadoc>
  </target>

  <target name="release" depends="prepare"
    description="Create complete source tar file.">
    <tar destfile="${embergraph-ganglia.dir}/DIST.${version}.tgz" compression="gzip">
      <tarfileset dir="${embergraph-ganglia.dir}" prefix="${version}">
        <include name="build.properties"/>
        <include name="build.xml"/>
        <include name="NOTICE"/>
        <include name="**/LEGAL/*"/>
        <include name="src/**"/>
        <exclude name="classes/**"/>
        <exclude name="ant-build/**"/>
        <exclude name="lib/**"/>
      </tarfileset>
    </tar>
  </target>

  <target name="all" depends="clean, test, jar, javadoc, release"
    description="clean, test, jar, javadoc, release"/>

</project>
