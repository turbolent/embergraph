<!-- $Id$ -->
<!--                                                        -->
<!-- do "ant bundle-jar" in the parent directory first.     -->
<!--                                                        -->
<project name="bsbm" basedir=".">

	<property file="build.properties" />

	<path id="runtime.classpath">
		<!-- The bigdata dependencies (for the nano-server). -->
		<fileset dir="${bigdata.build.dir}/lib">
			<include name="**/*.jar" />
		</fileset>
	</path>

	<!-- Note: split data files and use RDFDataLoadMaster for scale-out. -->
	<target name="run-load"
		    description="Load a data set.">
		<!-- delete file if it exists so we load into a new journal. -->
		<delete file="${bsbm.journalFile}" />
		<java classname="com.bigdata.rdf.store.DataLoader"
		      fork="true" failonerror="true"
		      >
			<arg line="-namespace ${bsbm.namespace} ${bsbm.journalPropertyFile} ${bsbm.outputFile}.${bsbm.outputType}${bsbm.compressType}" />
			<!-- specify/override the journal file name. -->
			<jvmarg line="${queryJvmArgs} -Dcom.bigdata.journal.AbstractJournal.file=${bsbm.journalFile}
				-Dcom.bigdata.rdf.store.DataLoader.bufferCapacity=1000000
				-Dcom.bigdata.io.DirectBufferPool.bufferCapacity=10485760
				" />
			<classpath>
				<path refid="runtime.classpath" />
			</classpath>
		</java>
	</target>

	<target name="start-sparql-server"
		    description="Start a small http server fronting for a bigdata database instance.">
		<java classname="com.bigdata.rdf.sail.webapp.NanoSparqlServer"
		      fork="true" failonerror="true"
		      >
			<arg line="${bsbm.nanoServerPort} ${bsbm.namespace} ${bsbm.journalPropertyFile}" />
			<!-- specify/override the journal file name. -->
			<jvmarg line="${queryJvmArgs} -Dcom.bigdata.journal.AbstractJournal.file=${bsbm.journalFile}" />
			<classpath>
				<path refid="runtime.classpath" />
			</classpath>
		</java>
	</target>
		
	<target name="dump-journal" 
		    description="Dump interesting facts about the loaded data.">
		<java classname="com.bigdata.journal.DumpJournal"
                           fork="true" failonerror="true">
			<arg line="-pages ${bsbm.journalFile}"/>
			<classpath>
				<path refid="runtime.classpath" />
			</classpath>
		</java>
	</target>

</project>
