import net.jini.constraint.BasicMethodConstraints;
import net.jini.core.constraint.ConnectionRelativeTime;
import net.jini.core.constraint.InvocationConstraints;
import net.jini.jeri.BasicILFactory;
import net.jini.jeri.BasicJeriExporter;
import net.jini.jeri.tcp.TcpServerEndpoint;
import net.jini.core.discovery.LookupLocator;

import org.embergraph.util.config.NicUtil;

com.sun.jini.example.browser {

    private static exportIpAddr = 
        NicUtil.getIpAddress("default.nic", "default", true);

    private static serverILFactory =
        new BasicILFactory(
            new BasicMethodConstraints(
                new InvocationConstraints(
                    new ConnectionRelativeTime(10000L), null)),
            null);

    listenerExporter = new BasicJeriExporter(TcpServerEndpoint.getInstance(exportIpAddr,0),
                                             serverILFactory,
                                             false,
                                             true);

    initialLookupGroups = new String[] { };
    exitActionListener = new com.sun.jini.example.browser.Browser.Exit();

    uninterestingInterfaces = 
        new String[] { "java.io.Serializable",
                       "java.rmi.Remote",
                       "net.jini.admin.Administrable",
                       "net.jini.core.constraint.RemoteMethodControl",
                       "net.jini.id.ReferentUuid",
                       "org.embergraph.service.EventReceivingService"
                     };
}

net.jini.discovery.LookupDiscovery {

    multicastRequestHost = com.sun.jini.example.browser.exportIpAddr;

}