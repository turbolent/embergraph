import java.io.File;
import com.sun.jini.start.NonActivatableServiceDescriptor;
import com.sun.jini.start.ServiceDescriptor;
import com.sun.jini.config.ConfigUtil;

/*
 * Jini configuration.
 *
 * The following jini services are installed by default, at least as
 * of Jini 2.1.  embergraph does not have a dependency on JavaSpaces, so
 * you do not need to start 'outrigger'.  Also, the 'browser' service
 * requires a GUI.  Since embergraph is started from a shell script, DO
 * NOT start the browser here since the execution environment will not
 * support the GUI and the service start will fail.  Instead, you can
 * launch a normal Jini installation from any GUI enabled machine on
 * your cluster and that will let you use the service browser.  You
 * can also use the ListServices class to see which services are running
 * on each host.

  browser: A visualization tool for exploring Jini(TM) Network Technology communities. 
   reggie: Provides implementations of ServiceRegistrar. 
 
*/
com.sun.jini.start {
    private static policyFile = "@POLICY_FILE@";
    private static host = ConfigUtil.getHostName();
    private static port = "@JINI_CLASS_SERVER_PORT@";
    private static jskdl = " http://" + host + ":" + port + "/jsk-dl.jar";
    private static libDir = "@LIB_DIR@"+File.separator+"jini"+File.separator+"lib"+File.separator;
    private static libDLDir = "@LIB_DIR@"+File.separator+"jini"+File.separator+"lib-dl"+File.separator;
    private static configDir = "@CONFIG_DIR@"+File.separator+"jini"+File.separator;

    serviceDescriptors = new ServiceDescriptor[]{
        new NonActivatableServiceDescriptor(
            "",
            policyFile,
            libDir+"classserver.jar",
            "com.sun.jini.tool.ClassServer",
            new String[]{
            	"-port", port,
            	"-dir", libDLDir, 
                "-verbose"
                }),

/* Note: DO NOT attempt to start the browser since the GUI is normally not available
   when we start jini.
   
        new NonActivatableServiceDescriptor(
            "http://" + host + ":" + port + "/browser-dl.jar" + jskdl,
            policyFile,
            libDir+"browser.jar",
            "com.sun.jini.example.browser.Browser",
            new String[] { configDir+"browser.config" }),
*/

        new NonActivatableServiceDescriptor(
            "http://" + host + ":" + port + "/reggie-dl.jar" + jskdl,
            policyFile,
            libDir+"reggie.jar",
            "com.sun.jini.reggie.TransientRegistrarImpl",
            new String[] { configDir+"reggie.config" })
    };
}
