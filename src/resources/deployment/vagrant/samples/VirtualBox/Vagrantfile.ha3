# -*- mode: ruby -*-
# vi: set ft=ruby :
#
# Vagraant.ha3 - Install the Embergraph High Availability Server with 3 Nodes with an VirtualBox Provider
#
# The launch synopsis for this Vagrantfile:
#
#   % vagrant up
#   % vagrant halt
#   % vagrant up
#
#  The "halt" and following "up" forces a restart of the services post-installation.
#  This is a temporary requirement until recipes are upated.

Vagrant.require_plugin "vagrant-berkshelf"

Vagrant.configure("2") do |config|

config.vm.provider :virtualbox do |vb|
	vb.customize ["modifyvm", :id, "--memory", "2048"]
end

script = <<SCRIPT
	apt-get update
	apt-get install -y curl
	curl -L https://www.opscode.com/chef/install.sh | bash
	mkdir -p /var/lib/zookeeper
	echo "33.33.33.10  embergraphA" >> /etc/hosts
	echo "33.33.33.11  embergraphB" >> /etc/hosts
	echo "33.33.33.12  embergraphC" >> /etc/hosts
SCRIPT

$scriptA = "#{script}\n\techo 1 > /var/lib/zookeeper/myid\n"
config.vm.define :embergraphA do |embergraphA|

  embergraphA.vm.hostname = "embergraphA"
  embergraphA.vm.box = "precise64"

  embergraphA.berkshelf.enabled = true

  embergraphA.vm.box_url = "http://files.vagrantup.com/precise64.box"

  embergraphA.vm.network :private_network, ip: "33.33.33.10"

  embergraphA.vm.provision :chef_solo do |chef|
    chef.json = {
	:embergraph => {
		:install_flavor => "ha"
	},
	:java => {
		:install_flavor => "oracle",
		:jdk_version => "7",
		:oracle => { 'accept_oracle_download_terms' => true }
	},
	:zookeeper =>	{
		:zoocfg => { :clientPort=> '2081' }
	}
    }

    embergraphA.vm.provision :shell, inline: $scriptA

    chef.run_list = [
        "recipe[embergraph::high_availability]"
    ]

  end

end # embergraphA


$scriptB = "#{script}\n\techo 2 > /var/lib/zookeeper/myid\n"
config.vm.define :embergraphB do |embergraphB|

  embergraphB.vm.hostname = "embergraphB"
  embergraphB.vm.box = "precise64"

  embergraphB.berkshelf.enabled = true

  embergraphB.vm.box_url = "http://files.vagrantup.com/precise64.box"

  embergraphB.vm.network :private_network, ip: "33.33.33.11"

  embergraphB.vm.provision :chef_solo do |chef|
    chef.json = {
	:embergraph => {
		:install_flavor => "ha"
	},
	:java => {
		:install_flavor => "oracle",
		:jdk_version => "7",
		:oracle => { 'accept_oracle_download_terms' => true }
	},
	:zookeeper =>	{
		:zoocfg => { :clientPort=> '2081' }
	}
    }

    embergraphB.vm.provision :shell, inline: $scriptB

    chef.run_list = [
        "recipe[embergraph::high_availability]"
    ]

  end

end # embergraphB


$scriptC = "#{script}\n\techo 3 > /var/lib/zookeeper/myid\n"
config.vm.define :embergraphC do |embergraphC|

  embergraphC.vm.hostname = "embergraphC"
  embergraphC.vm.box = "precise64"

  embergraphC.berkshelf.enabled = true

  embergraphC.vm.box_url = "http://files.vagrantup.com/precise64.box"

  embergraphC.vm.network :private_network, ip: "33.33.33.12"

  embergraphC.vm.provision :chef_solo do |chef|
    chef.json = {
	:embergraph => {
		:install_flavor => "ha"
	},
	:java => {
		:install_flavor => "oracle",
		:jdk_version => "7",
		:oracle => { 'accept_oracle_download_terms' => true }
	},
	:zookeeper =>	{
		:zoocfg => { :clientPort=> '2081' }
	}
    }

    embergraphC.vm.provision :shell, inline: $scriptC

    chef.run_list = [
        "recipe[embergraph::high_availability]"
    ]

  end

end # embergraphC

end
