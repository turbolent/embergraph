import java.io.File;
import com.sun.jini.start.NonActivatableServiceDescriptor;
import com.sun.jini.start.ServiceDescriptor;
import com.sun.jini.config.ConfigUtil;

/*
 * Apache River ServiceStarter configuration.
 *
 * This configuration file is used to start the services required for
 * a embergraph Highly Available Replication Cluster (HAJournalServer) on
 * each node.

    ClassServer: Provides access to downloadable jars in LIBDL_DIR.
         reggie: Provides implementations of ServiceRegistrar.
HAJournalServer: Embergraph HA server instance.

*/
com.sun.jini.start {
    private static policyFile = System.getProperty("POLICY_FILE");
    private static host = ConfigUtil.getHostName();
    private static port = System.getProperty("JINI_CLASS_SERVER_PORT");
    private static jskdl = " http://" + host + ":" + port + "/jsk-dl.jar";
    private static libDir = System.getProperty("LIB_DIR");
    private static libDLDir = System.getProperty("LIBDL_DIR");
    private static configDir = System.getProperty("CONFIG_DIR")+File.separator+"jini"+File.separator;
    private static jettyXml = System.getProperty("JETTY_XML",
       "embergraph"+File.separator+"var"+File.separator+"jetty"+File.separator+"jetty.xml"
       );

    serviceDescriptors = new ServiceDescriptor[]{
    
        // ClassServer
        new NonActivatableServiceDescriptor(
            "",
            policyFile,
            libDir+"classserver.jar",
            "com.sun.jini.tool.ClassServer",
            new String[]{
                "-port", port,
                "-dir", libDLDir,
                "-verbose"
                }),
        
        // Service Registrar (aka LookUp Service aka LUS)
        new NonActivatableServiceDescriptor(
            "http://" + host + ":" + port + "/reggie-dl.jar" + jskdl,
            policyFile,
            libDir+"reggie.jar",
            "com.sun.jini.reggie.TransientRegistrarImpl",
            new String[] { configDir+"reggie.config" }),

        // HAJournalServer
        new NonActivatableServiceDescriptor(
            "", // TODO code base URL?
            policyFile,
            System.getProperty("HAJOURNAL_CLASSPATH"),
            "org.embergraph.journal.jini.ha.HAJournalServer",
            new String[] { 
               configDir + "HAJournal.config", // configuration file.
               // overrides
               "org.embergraph.journal.jini.ha.HAJournalServer.jettyXml=\""+jettyXml+"\""
            })

    };

}
