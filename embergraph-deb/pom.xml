<?xml version="1.0"?>
<!--
Copyright (C) SYSTAP, LLC DBA Blazegraph 2006-2018. All rights reserved.
Copyright (C) Embergraph contributors 2019. All rights reserved.

This program is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; version 2 of the License.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program; if not, write to the Free Software
Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

Copyright 2010 by TalkingTrends (Amsterdam, The Netherlands)
-->
<project xmlns="http://maven.apache.org/POM/4.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>org.embergraph</groupId>
    <artifactId>embergraph-artifacts</artifactId>
    <version>2.1.5-SNAPSHOT</version>
    <relativePath>../embergraph-artifacts/pom.xml</relativePath>
  </parent>
  <artifactId>embergraph-deb</artifactId>
  <version>2.1.5-SNAPSHOT</version>
  <name>Embergraph Debian Package</name>
  <description>Debian Deployer for Embergraph</description>
  <packaging>deb</packaging>
  <properties>
    <!-- Pass -PsignDebian=true to mvn to sign the package. -->
    <signDebian>false</signDebian>
  </properties>
  <build>
    <extensions>
      <!-- ADD support for the "deb" packaging -->
      <extension>
        <groupId>org.vafer</groupId>
        <artifactId>jdeb</artifactId>
        <version>1.5</version>
      </extension>
    </extensions>
    <pluginManagement>
      <plugins>
        <plugin>
          <artifactId>jdeb</artifactId>
          <groupId>org.vafer</groupId>
          <version>1.5</version>
          <!-- Customize deb package  -->
          <configuration>
            <deb>${project.build.directory}/${project.artifactId}-${project.version}.deb</deb>
            <signPackage>${signDebian}</signPackage>
            <keyring>${gpg.keyring}</keyring>
            <key>${gpg.keysig}</key>
            <passphrase>${gpg.passphrase}</passphrase>
            <dataSet>
              <!-- dependencies go in /usr/share/embergraph-[version]/lib -->
              <data>
                <src>${project.build.directory}/dependency</src>
                <type>directory</type>
                <includes>*.jar</includes>
                <mapper>
                  <type>perm</type>
                  <prefix>/usr/share/embergraph-${project.version}/lib</prefix>
                  <user>root</user>
                  <group>root</group>
                </mapper>
              </data>
              <!-- copy the war files to the install war sub directory -->
              <data>
                <src>${project.build.directory}/classes/war</src>
                <type>directory</type>
                <includes>**/*</includes>
                <mapper>
                  <type>perm</type>
                  <prefix>/usr/share/embergraph-${project.version}/war/</prefix>
                  <user>root</user>
                  <group>root</group>
                </mapper>
              </data>
              <!-- create the data directories, log directories in preinst script -->
              <data>
                <src>${project.basedir}/src/deb/logrotate.d/embergraph</src>
                <type>file</type>
                <mapper>
                  <type>perm</type>
                  <prefix>/etc/logrotate.d</prefix>
                  <filemode>755</filemode>
                  <user>root</user>
                  <group>root</group>
                </mapper>
              </data>
              <data>
                <src>${project.basedir}/src/deb/init.d</src>
                <type>directory</type>
                <mapper>
                  <type>perm</type>
                  <prefix>/etc/init.d</prefix>
                  <filemode>755</filemode>
                  <user>root</user>
                  <group>root</group>
                </mapper>
              </data>
              <data>
                <src>${project.basedir}/src/deb/bin</src>
                <type>directory</type>
                <mapper>
                  <type>perm</type>
                  <prefix>/usr/bin/</prefix>
                  <filemode>755</filemode>
                  <user>root</user>
                  <group>root</group>
                </mapper>
              </data>
              <data>
                <src>${project.basedir}/src/deb/conf/embergraph</src>
                <type>file</type>
                <conffile>true</conffile>
                <mapper>
                  <type>perm</type>
                  <prefix>/etc/default/</prefix>
                  <filemode>644</filemode>
                  <user>root</user>
                  <group>root</group>
                </mapper>
              </data>
              <!-- Jetty.xml from the embergraph-jar -->
              <data>
                <src>${project.build.directory}/classes/jetty.xml</src>
                <dst>jetty.xml</dst>
                <type>file</type>
                <conffile>true</conffile>
                <mapper>
                  <type>perm</type>
                  <prefix>/etc/embergraph/</prefix>
                  <user>root</user>
                  <group>root</group>
                </mapper>
              </data>
              <!-- Baseline RWStore.properties -->
              <data>
                <src>${project.build.directory}/classes/RWStore.properties</src>
                <dst>RWStore.properties</dst>
                <type>file</type>
                <conffile>true</conffile>
                <mapper>
                  <type>perm</type>
                  <prefix>/etc/embergraph/</prefix>
                  <user>root</user>
                  <group>root</group>
                </mapper>
              </data>
              <!-- logging properties files -->
              <data>
                <src>${project.build.directory}/classes/war/WEB-INF/classes/log4j.properties</src>
                <dst>log4j.properties</dst>
                <type>file</type>
                <conffile>true</conffile>
                <mapper>
                  <type>perm</type>
                  <prefix>/etc/embergraph/</prefix>
                  <user>root</user>
                  <group>root</group>
                </mapper>
              </data>
              <!-- soft link to versioned software -->
              <data>
                <type>link</type>
                <symlink>true</symlink>
                <linkName>/usr/share/embergraph</linkName>
                <linkTarget>/usr/share/embergraph-${project.version}</linkTarget>
              </data>
              <!-- upstart script
                <data>
                  <src>${basedir}/src/deb/init/embergraph.conf</src>
                  <type>file</type>
                  <mapper>
                    <type>perm</type>
                    <prefix>/etc/init</prefix>
                    <user>root</user>
                    <group>root</group>
                  </mapper>
                </data> -->
            </dataSet>
          </configuration>
        </plugin>
      </plugins>
    </pluginManagement>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <version>2.10</version>
        <executions>
          <execution>
            <id>copy</id>
            <phase>compile</phase>
            <goals>
              <goal>copy</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>org.embergraph</groupId>
                  <artifactId>embergraph-war-html</artifactId>
                  <version>${project.version}</version>
                  <type>war</type>
                  <overWrite>true</overWrite>
                  <outputDirectory>target/classes/</outputDirectory>
                  <destFileName>embergraph.war</destFileName>
                </artifactItem>
                <artifactItem>
                  <groupId>org.embergraph</groupId>
                  <artifactId>embergraph-jar</artifactId>
                  <version>${project.version}</version>
                  <type>jar</type>
                  <overWrite>true</overWrite>
                  <outputDirectory>target/classes/</outputDirectory>
                  <destFileName>embergraph.jar</destFileName>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>copy-dependencies</id>
            <phase>compile</phase>
            <goals>
              <goal>copy-dependencies</goal>
            </goals>
            <configuration>
              <overWriteReleases>false</overWriteReleases>
              <overWriteSnapshots>false</overWriteSnapshots>
              <overWriteIfNewer>true</overWriteIfNewer>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>maven-antrun-plugin</artifactId>
        <version>1.6</version>
        <executions>
          <execution>
            <id>unpack-war</id>
            <goals>
              <goal>run</goal>
            </goals>
            <phase>compile</phase>
            <configuration>
              <target>
                <unzip dest="target/classes/war">
                  <patternset>
                    <include name="**/*"/>
                  </patternset>
                  <fileset dir="target/classes/">
                    <include name="embergraph.war"/>
                  </fileset>
                </unzip>
                <copy file="target/classes/war/WEB-INF/RWStore.properties" todir="target/classes"/>
                <unzip dest="target/classes/jar">
                  <patternset>
                    <include name="jetty.xml"/>
                  </patternset>
                  <fileset dir="target/classes/">
                    <include name="embergraph.jar"/>
                  </fileset>
                </unzip>
                <copy file="target/classes/jar/jetty.xml" todir="target/classes"/>
              </target>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
  <reporting>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-javadoc-plugin</artifactId>
        <configuration>
          <stylesheetfile>${basedir}/src/main/javadoc/stylesheet.css</stylesheetfile>
          <show>public</show>
          <maxmemory>1000m</maxmemory>
          <author>true</author>
          <version>true</version>
          <doctitle><![CDATA[<h1>Embergraph Debian Deployer</h1>]]></doctitle>
          <bottom><![CDATA[
<i>Copyright &#169; SYSTAP, LLC DBA Blazegraph 2006-2018. All Rights Reserved.</i>
<i>Copyright &#169; Embergraph contributors 2019. All Rights Reserved.</i>
]]></bottom>
        </configuration>
      </plugin>
    </plugins>
  </reporting>
  <dependencies>
    <!-- only use the runtime jar here to make it straightforward to upgrade in place -->
    <dependency>
      <groupId>org.embergraph</groupId>
      <artifactId>embergraph-runtime</artifactId>
      <version>${project.version}</version>
    </dependency>
    <!-- External and third party dependencies -->
    <dependency>
      <groupId>org.eclipse.jetty</groupId>
      <artifactId>jetty-continuation</artifactId>
      <version>${jetty.version}</version>
    </dependency>
    <dependency>
      <groupId>org.eclipse.jetty</groupId>
      <artifactId>jetty-http</artifactId>
      <version>${jetty.version}</version>
    </dependency>
    <dependency>
      <groupId>org.eclipse.jetty</groupId>
      <artifactId>jetty-io</artifactId>
      <version>${jetty.version}</version>
    </dependency>
    <dependency>
      <groupId>org.eclipse.jetty</groupId>
      <artifactId>jetty-jmx</artifactId>
      <version>${jetty.version}</version>
    </dependency>
    <dependency>
      <groupId>org.eclipse.jetty</groupId>
      <artifactId>jetty-jndi</artifactId>
      <version>${jetty.version}</version>
    </dependency>
    <dependency>
      <groupId>org.eclipse.jetty</groupId>
      <artifactId>jetty-server</artifactId>
      <version>${jetty.version}</version>
    </dependency>
    <dependency>
      <groupId>org.eclipse.jetty</groupId>
      <artifactId>jetty-util</artifactId>
      <version>${jetty.version}</version>
    </dependency>
    <dependency>
      <groupId>org.eclipse.jetty</groupId>
      <artifactId>jetty-webapp</artifactId>
      <version>${jetty.version}</version>
    </dependency>
    <dependency>
      <groupId>org.eclipse.jetty</groupId>
      <artifactId>jetty-servlet</artifactId>
      <version>${jetty.version}</version>
    </dependency>
    <dependency>
      <groupId>org.eclipse.jetty</groupId>
      <artifactId>jetty-security</artifactId>
      <version>${jetty.version}</version>
    </dependency>
    <dependency>
      <groupId>org.eclipse.jetty</groupId>
      <artifactId>jetty-xml</artifactId>
      <version>${jetty.version}</version>
    </dependency>
    <dependency>
      <groupId>org.eclipse.jetty</groupId>
      <artifactId>jetty-rewrite</artifactId>
      <version>${jetty.version}</version>
    </dependency>
    <dependency>
      <groupId>org.eclipse.jetty</groupId>
      <artifactId>jetty-client</artifactId>
      <version>${jetty.version}</version>
    </dependency>
    <dependency>
      <groupId>org.eclipse.jetty</groupId>
      <artifactId>jetty-proxy</artifactId>
      <version>${jetty.version}</version>
    </dependency>
    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>javax.servlet-api</artifactId>
      <version>${servlet.version}</version>
    </dependency>
    <dependency>
      <groupId>com.github.stephenc.high-scale-lib</groupId>
      <artifactId>high-scale-lib</artifactId>
      <version>${highscalelib.version}</version>
    </dependency>
    <dependency>
      <groupId>org.embergraph</groupId>
      <artifactId>colt</artifactId>
      <version>${colt.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.lucene</groupId>
      <artifactId>lucene-core</artifactId>
      <version>${lucene.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.lucene</groupId>
      <artifactId>lucene-analyzers-common</artifactId>
      <version>${lucene.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.lucene</groupId>
      <artifactId>lucene-analyzers-smartcn</artifactId>
      <version>${lucene.version}</version>
    </dependency>
    <dependency>
      <groupId>com.ibm.icu</groupId>
      <artifactId>icu4j</artifactId>
      <version>${icu.version}</version>
    </dependency>
    <dependency>
      <!-- log4j is the primary logger for embergraph. -->
      <groupId>log4j</groupId>
      <artifactId>log4j</artifactId>
      <version>${log4j.version}</version>
      <!-- There is a bug with log4j 1.2.15 where it has a lot  -->
      <!-- of dependencies that we do not need in its POM. The  -->
      <!-- exclusions are only necessary with that version.     -->
      <!--
           <exclusions>
             <exclusion>
               <groupId>javax.jms</groupId>
               <artifactId>jms</artifactId>
             </exclusion>
             <exclusion>
               <groupId>com.sun.jdmk</groupId>
               <artifactId>jmxtools</artifactId>
             </exclusion>
             <exclusion>
               <groupId>com.sun.jmx</groupId>
               <artifactId>jmxri</artifactId>
             </exclusion>
           </exclusions>
           -->
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
      <version>${slf4j.version}</version>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-log4j12</artifactId>
      <version>${slf4j.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.httpcomponents</groupId>
      <artifactId>httpclient</artifactId>
      <version>${apache.httpclient.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.httpcomponents</groupId>
      <artifactId>httpclient-cache</artifactId>
      <version>${apache.httpclient_cache.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.httpcomponents</groupId>
      <artifactId>httpcore</artifactId>
      <version>${apache.httpcore.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.httpcomponents</groupId>
      <artifactId>httpmime</artifactId>
      <version>${apache.httpmime.version}</version>
    </dependency>
    <dependency>
      <groupId>commons-codec</groupId>
      <artifactId>commons-codec</artifactId>
      <version>${apache.commons_codec.version}</version>
    </dependency>
    <dependency>
      <groupId>commons-fileupload</groupId>
      <artifactId>commons-fileupload</artifactId>
      <version>${apache.commons_fileupload.version}</version>
    </dependency>
    <dependency>
      <groupId>commons-io</groupId>
      <artifactId>commons-io</artifactId>
      <version>${apache.commons_io.version}</version>
    </dependency>
    <dependency>
      <groupId>commons-logging</groupId>
      <artifactId>commons-logging</artifactId>
      <version>${apache.commons_logging.version}</version>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-core</artifactId>
      <version>${jackson.version}</version>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-annotations</artifactId>
      <version>${jackson.version}</version>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-databind</artifactId>
      <version>${jackson.version}</version>
    </dependency>
    <dependency>
      <groupId>org.codehaus.jettison</groupId>
      <artifactId>jettison</artifactId>
      <version>${jettison.version}</version>
    </dependency>
    <dependency>
      <groupId>org.openrdf.sesame</groupId>
      <artifactId>sesame-runtime</artifactId>
      <version>${sesame.version}</version>
    </dependency>
    <dependency>
      <groupId>org.openrdf.sesame</groupId>
      <artifactId>sesame-rio-rdfxml</artifactId>
      <version>${sesame.version}</version>
    </dependency>
    <dependency>
      <groupId>org.openrdf.sesame</groupId>
      <artifactId>sesame-queryresultio-sparqljson</artifactId>
      <version>${sesame.version}</version>
    </dependency>
    <dependency>
      <groupId>com.tinkerpop.blueprints</groupId>
      <artifactId>blueprints-core</artifactId>
      <version>${blueprints.version}</version>
    </dependency>
    <dependency>
      <groupId>com.tinkerpop.rexster</groupId>
      <artifactId>rexster-core</artifactId>
      <version>${rexster.version}</version>
    </dependency>
    <dependency>
      <groupId>commons-configuration</groupId>
      <artifactId>commons-configuration</artifactId>
      <version>${apache.commons_configuration.version}</version>
    </dependency>
    <dependency>
      <groupId>it.unimi.dsi</groupId>
      <artifactId>fastutil</artifactId>
      <version>${fastutil.version}</version>
    </dependency>
    <!-- jsonld -->
    <dependency>
      <groupId>com.github.jsonld-java</groupId>
      <artifactId>jsonld-java-sesame</artifactId>
      <version>${jsonld.version}</version>
      <exclusions>
        <exclusion>
          <groupId>org.openrdf.sesame</groupId>
          <artifactId>*</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <!-- Included for RDFa support -->
    <dependency>
      <groupId>org.semarglproject</groupId>
      <artifactId>semargl-sesame</artifactId>
      <version>${semargl.version}</version>
    </dependency>
  </dependencies>
</project>
