import java.io.File;
import com.sun.jini.start.ServiceDescriptor;
import com.sun.jini.start.NonActivatableServiceDescriptor;

/*
 * Sample configuration for starting a service using the Jini
 * ServiceStarter.
 *
 * Note: DO NOT include anything outside of com.sun.jini.start and the
 * core Java packages or you will get a ClassNotFoundException when
 * the ServiceStarter tries to resolve the imports!  If you see this
 * anyway, then add "jini-ext.jar" to the classpath and it will
 * resolve the ConfigurationException class and then show you the
 * stack trace so that you can figure out what is going on (I find
 * that it can help tremendously to have "jini-ext.jar" in the
 * classpath when working on this configuration - and can even appear
 * to be necessary for the server to start!
 *
 * @see http://java.sun.com/products/jini/2.0/doc/api/com/sun/jini/start/ServiceStarter.html
 */

com.sun.jini.start {

    /*
     * Code base for downloadable code exposed by this service.
     */
    private static codebase =    
        "http://proto.cognitiveweb.org/maven-repository/bigdata/jars/";
        
    /*
     * @todo restrict the policy to what is actually required by the
     * service.  Among other things, we only need access to a
     * temporary directory and to the directory in which the journals
     * and index segments will be stored, not general read/write on
     * the disk.
     */
    private static policy = "policy.all";

    /*
     * The directory containing the various JARs.
     */
    private static libdir = "lib"+File.separator;

    /*
     * Declare dependencies for the server here.
     */
    private static classpath = 
	// jini
	libdir+"jini-core.jar"+File.pathSeparator+
	libdir+"jini-ext.jar"+File.pathSeparator+
	libdir+"reggie.jar"+File.pathSeparator+
	libdir+"sun-util.jar"+File.pathSeparator+
	// utility JARs.
	libdir+"log4j-1.2.8.jar"+File.pathSeparator+
	libdir+"ctc_utils-5-4-2005.jar"+File.pathSeparator+
	libdir+"lgpl-utils-1.0-b1-dev.jar"+File.pathSeparator+
	libdir+"cweb-extser-0.1-b2-dev.jar"+File.pathSeparator+
	// ICU (unicode support).
	libdir+"icu4j-3_6.jar"+File.pathSeparator+
	// test suites only!
	libdir+"junit-3.8.1.jar"+File.pathSeparator+
	libdir+"cweb-junit-ext-1.1-b2-dev.jar"+File.pathSeparator+
	// main bigdata JAR.
	//libdir+
	"bigdata.jar"
	;

    /*
     * Server(s) to run.  All servers will run in the same VM.
     *
     * @todo start metadata server, transaction server, load-balancer,
     * and map/reduce services.
     */
    static serviceDescriptors = new ServiceDescriptor[]  {
	/*
	 * metadata server(s)
	 */
	new NonActivatableServiceDescriptor(
                        codebase, policy, classpath,
                        "com.bigdata.service.MetadataServer",
                         new String[] { "src/resources/config/standalone/MetadataServer0.config" })
	/*
	 * data server(s)
	 */
	new NonActivatableServiceDescriptor(
                        codebase, policy, classpath,
                        "com.bigdata.service.DataServer",
                         new String[] { "src/resources/config/standalone/DataServer0.config" })
	
	, new NonActivatableServiceDescriptor(
                        codebase, policy, classpath,
                        "com.bigdata.service.DataServer",
                         new String[] { "src/resources/config/standalone/DataServer1.config" })
                         
    };

}
